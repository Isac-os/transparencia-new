[{"C:\\Users\\FELIPE\\Desktop\\git\\transparencia-new\\src\\index.js":"1","C:\\Users\\FELIPE\\Desktop\\git\\transparencia-new\\src\\Pages\\Home\\home.jsx":"2","C:\\Users\\FELIPE\\Desktop\\git\\transparencia-new\\src\\Pages\\Unidade\\unidade.jsx":"3","C:\\Users\\FELIPE\\Desktop\\git\\transparencia-new\\src\\Components\\Header\\header.jsx":"4","C:\\Users\\FELIPE\\Desktop\\git\\transparencia-new\\src\\Pages\\Unidade\\unidadesLista.jsx":"5","C:\\Users\\FELIPE\\Desktop\\git\\transparencia-new\\src\\Pages\\Teste\\teste.jsx":"6","C:\\Users\\FELIPE\\Desktop\\git\\transparencia-new\\src\\Pages\\Unidade\\unidadeFormularioEditar.jsx":"7"},{"size":285,"mtime":1609204669248,"results":"8","hashOfConfig":"9"},{"size":4422,"mtime":1609204890639,"results":"10","hashOfConfig":"9"},{"size":4272,"mtime":1609204890639,"results":"11","hashOfConfig":"9"},{"size":1894,"mtime":1609204890639,"results":"12","hashOfConfig":"9"},{"size":5597,"mtime":1609213760575,"results":"13","hashOfConfig":"9"},{"size":2718,"mtime":1609204669232,"results":"14","hashOfConfig":"9"},{"size":7671,"mtime":1609318321801,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"6qoxxw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\FELIPE\\Desktop\\git\\transparencia-new\\src\\index.js",[],["32","33"],"C:\\Users\\FELIPE\\Desktop\\git\\transparencia-new\\src\\Pages\\Home\\home.jsx",[],"C:\\Users\\FELIPE\\Desktop\\git\\transparencia-new\\src\\Pages\\Unidade\\unidade.jsx",["34","35"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col, Form, Image, Breadcrumb, Card, Alert } from 'react-bootstrap';\r\nimport UnidadeService from '../../Services/UnidadeService';\r\n\r\nimport './unidade.css';\r\n\r\nexport default function Unidade(props) {\r\n  const [unit, setUnit] = useState([]);\r\n  const [docs, setDocs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const id = props.match.params.id;\r\n    UnidadeService.get(id).then(results => {\r\n      setUnit(results.data);\r\n    })\r\n    // /* const fetchData = async () => {\r\n    //   const url = await UnidadesService.get('/units/' + props.match.params.id);\r\n    //   setUnit(url.data);\r\n    //   // setLoading(false);\r\n    // };\r\n    // fetchData(); */\r\n  }, [props]);\r\n\r\n\r\n\r\n  /* function handleChange(event) {\r\n    const id = +event.target.value - 1;\r\n    const finalData = newArray[id].data;\r\n    if (finalData !== null) {\r\n      setDocs(finalData)\r\n    } else {\r\n      setDocs(\"\")\r\n    }\r\n    return;\r\n  } */\r\n  return (\r\n    <>\r\n      <div className=\"unit\">\r\n        <Container>\r\n          <div className=\"mt-4\">\r\n            <Breadcrumb>\r\n              <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\r\n              <Breadcrumb.Item active href=\"\">\r\n                {unit.nome}\r\n              </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n          </div>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src=\"/logo-horizontal.svg\" fluid\r\n                width=\"250rem\"\r\n                className=\"d-inline-block align-top logo-isac mt-4\"\r\n                alt=\"isac-logo\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-4\">\r\n            <Col md={12}>\r\n              <h1>{unit.nome}</h1>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-4\">\r\n            <Col md={12}>\r\n              {unit.resumo && <h5>{unit.resumo}</h5>}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <div className=\"line mt-4\"></div>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-4\">\r\n            <Col md={6}>\r\n              {unit.cnpj && <h5>CNPJ: {unit.cnpj}</h5>}\r\n              <h5>Endereço: {unit.endereco}</h5>\r\n              <h5>Cidade: {unit.city}/{unit.uf}</h5>\r\n            </Col>\r\n            <Col md={6}>\r\n              <h5>CEP: {unit.cep}</h5>\r\n              <h5>Telefone: {unit.telefone}</h5>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"infos\">\r\n            <Col md={12}>\r\n              <h2>Informações</h2>\r\n            </Col>\r\n          </Row>\r\n          {/*  <Row className=\"mt-2 select\">\r\n            <Col md={4}>\r\n              <label>Selecione o tipo de informação</label>\r\n              <Form.Group>\r\n                <Form.Control className=\"seletor\" as=\"select\" size=\"lg\" onChange={handleChange}>\r\n                  <option value=\"\">Selecione uma opção</option>\r\n                  {newArray.map(item => <option key={item.id} value={item.id}>{item.name}</option>)}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row> */}\r\n          <Row>\r\n            <Container>\r\n              <>\r\n                {docs.length === 0 ? <>\r\n                  <Alert variant=\"secondary\">\r\n                    Não existem documentos cadastrados nessa categoria.\r\n                  </Alert>\r\n                </> :\r\n                  docs.map(item => (\r\n                    <Card key={item.id} className=\"mb-2\">\r\n                      <Card.Body className=\"d-flex align-items-center justify-content-between\">\r\n                        <p className=\"w-50\"><small><strong>Documento</strong></small><br />\r\n                          {item.document || item.name}</p>\r\n                        <p><small><strong>Última atualização</strong></small><br />\r\n                          {item.update_date || \"Sem data de atualização\"}</p>\r\n                        <a href={item.url_document || item.data} className=\"btn btn-primary\" rel=\"noreferrer\" target=\"_blank\">Download</a>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  ))\r\n                }\r\n              </>\r\n            </Container>\r\n          </Row>\r\n\r\n        </Container>\r\n      </div>\r\n\r\n    </>\r\n\r\n  )\r\n}","C:\\Users\\FELIPE\\Desktop\\git\\transparencia-new\\src\\Components\\Header\\header.jsx",[],"C:\\Users\\FELIPE\\Desktop\\git\\transparencia-new\\src\\Pages\\Unidade\\unidadesLista.jsx",["36","37"],"C:\\Users\\FELIPE\\Desktop\\git\\transparencia-new\\src\\Pages\\Teste\\teste.jsx",[],"C:\\Users\\FELIPE\\Desktop\\git\\transparencia-new\\src\\Pages\\Unidade\\unidadeFormularioEditar.jsx",["38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":31,"nodeType":"46","messageId":"47","endLine":2,"endColumn":35},{"ruleId":"44","severity":1,"message":"48","line":9,"column":16,"nodeType":"46","messageId":"47","endLine":9,"endColumn":23},{"ruleId":"44","severity":1,"message":"49","line":4,"column":39,"nodeType":"46","messageId":"47","endLine":4,"endColumn":44},{"ruleId":"50","severity":1,"message":"51","line":43,"column":51,"nodeType":"52","messageId":"53","endLine":43,"endColumn":53},{"ruleId":"44","severity":1,"message":"54","line":37,"column":11,"nodeType":"46","messageId":"47","endLine":37,"endColumn":14},{"ruleId":"44","severity":1,"message":"54","line":48,"column":11,"nodeType":"46","messageId":"47","endLine":48,"endColumn":14},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'setDocs' is assigned a value but never used.","'Alert' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]